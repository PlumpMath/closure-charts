Index: goog/graphics/svgelement.js
===================================================================
--- goog/graphics/svgelement.js	(revision 697)
+++ goog/graphics/svgelement.js	(working copy)
@@ -179,8 +179,12 @@
  * @param {goog.graphics.Path} path The path object to draw.
  */
 goog.graphics.SvgPathElement.prototype.setPath = function(path) {
+  // Check if the Path is empty before setting attribute.
+  var attributes = path.isEmpty() ? {} : 
+    {'d': goog.graphics.SvgGraphics.getSvgPath(path)};
+  
   this.getGraphics().setElementAttributes(this.getElement(),
-      {'d': goog.graphics.SvgGraphics.getSvgPath(path)});
+      attributes);
 };
 
 
Index: goog/graphics/svggraphics.js
===================================================================
--- goog/graphics/svggraphics.js	(revision 697)
+++ goog/graphics/svggraphics.js	(working copy)
@@ -614,9 +614,12 @@
  */
 goog.graphics.SvgGraphics.prototype.drawPath = function(
     path, stroke, fill, opt_group) {
-
-  var element = this.createSvgElement_('path',
-      {'d': goog.graphics.SvgGraphics.getSvgPath(path)});
+  
+  // Check if the Path is empty. Do not add 'd' attribute if so.
+  var attributes = path.isEmpty() ? {} : 
+    {'d': goog.graphics.SvgGraphics.getSvgPath(path)}
+  
+  var element = this.createSvgElement_('path', attributes);
   var wrapper = new goog.graphics.SvgPathElement(element, this, stroke, fill);
   this.append_(wrapper, opt_group);
   return wrapper;
