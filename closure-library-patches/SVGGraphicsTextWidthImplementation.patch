## Eclipse Workspace Patch 1.0
#P closure-library-readonly
Index: closure/goog/graphics/svggraphics.js
===================================================================
--- closure/goog/graphics/svggraphics.js	Wed Nov 17 17:23:02 2010 +0000
+++ closure/goog/graphics/svggraphics.js	Wed Nov 17 18:03:42 2010 +0000
@@ -15,6 +15,8 @@
 
 /**
  * @fileoverview SvgGraphics sub class that uses SVG to draw the graphics.
+ *
+ *
  */
 
 goog.provide('goog.graphics.SvgGraphics');
@@ -38,7 +40,6 @@
 goog.require('goog.userAgent');
 
 
-
 /**
  * A Graphics implementation for drawing using SVG.
  * @param {string|number} width The width in pixels.  Strings
@@ -693,7 +694,37 @@
  * @param {goog.graphics.Font} font The font object describing the font style.
  */
 goog.graphics.SvgGraphics.prototype.getTextWidth = function(text, font) {
-  // TODO(user) Implement
+  /** @type {goog.dom.DomHelper} */
+  var domHelper = goog.dom.getDomHelper();
+  
+  /**
+   * The ruler is used to measure the pixel width of Strings The style given
+   * allows the ruler to be off the page (out of sight), with the correct font
+   * and style properties.
+   *
+   * @type {Element}
+   */
+  var ruler_ = domHelper.createDom(
+      'div',
+      {
+        style: 'position:absolute; visibility:hidden; font-family:' +
+            font.family + '; font-size:' +
+            font.size + 'px;'
+      });
+  
+  // Add the ruler to the dom
+  document.body.appendChild(ruler_);
+  
+  // Set the inner html of the ruler to be the text
+  ruler_.innerHTML = text;
+  
+  /** @type {number} */
+  var result = ruler_.offsetWidth;
+  
+  // Remove the ruler
+  domHelper.removeNode(ruler_);
+    
+  return result;
 };
 
 
