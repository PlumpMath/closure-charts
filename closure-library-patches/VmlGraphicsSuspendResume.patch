Index: goog/graphics/vmlgraphics.js
===================================================================
--- goog/graphics/vmlgraphics.js	(revision 697)
+++ goog/graphics/vmlgraphics.js	(working copy)
@@ -239,13 +239,48 @@
  * @private
  */
 goog.graphics.VmlGraphics.prototype.updateGraphics_ = function() {
-  if (goog.graphics.VmlGraphics.IE8_MODE_ && this.isInDocument()) {
-    this.getElement().innerHTML = this.getElement().innerHTML;
+  if (goog.graphics.VmlGraphics.IE8_MODE_) {
+    // Has there been a suspend call
+    if (this.preventRedraw_) {
+      // Suspended and requires a redraw
+      this.needsRedraw_ = true;
+    } else if (this.isInDocument()) {
+      this.getElement().innerHTML = this.getElement().innerHTML;
+    }
   }
 };
 
 
 /**
+ * Prevent redraws. Follow with a call to resume to update the changes 
+ * that have been made. Will set the preventRedraw_ flag to true, meaning that
+ * a call to updateGraphics_ will not redraw, rather flag that a redraw is
+ * required. This allows multiple redraws to be applied without updating each
+ * time.
+ * @override
+ */
+goog.graphics.VmlGraphics.prototype.suspend = function() {
+  this.preventRedraw_ = true;
+};
+
+
+/**
+ * Resume redrawing. If any changes were made since suspend was called, carry
+ * out a redraw.
+ * @override
+ */
+goog.graphics.VmlGraphics.prototype.resume = function() {
+  this.preventRedraw_ = false;
+
+  // Update if necessary
+  if (this.needsRedraw_) {
+    this.needsRedraw_ = false;
+    this.updateGraphics_();
+  }
+};
+
+
+/**
  * Appends an element.
  *
  * @param {goog.graphics.Element} element The element wrapper.
